{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ITCO\\\\Documents\\\\Personal\\\\Universidad\\\\TCU\\\\LibrosInteractivos\\\\webapp\\\\src\\\\components\\\\Libro1\\\\Colores-002\\\\LettlerContent.js\";\nimport React, { useState } from 'react';\nimport { Image } from 'react-bootstrap';\n\nconst buildColor = color => {\n  return {\n    color\n  };\n}; //FUNCION QUE RENDERIZA LAS IMAGENES DE CADA COLOR TANTO ESPAÑOL E INGLES\n\n\nfunction LettlerContent(props) {\n  /*\r\n  EL PROBLEMA ACA ES QUE CUANDO SE ACTIVA EL NEXTIMAGE DE LETRAS.JS MANTIENE EL ATRIBUTO NAME BASADO EN LAS LETRAS DEL COLOR ANTERIOR, CUANDO SE VAN MARCANDO \r\n  UNA A UNA SE CAMBIA EL NAME DE ORIGNAL_SP O ORIGINAL_ENG POR CHANGE_SP O CHANGE_ENG PERO CUANDO ACTIVO LA FUNCION NO ME LAS CARGA CON EL ORIGINAL\r\n  */\n  //CARGA LETRAS DE ESPAÑOL\n  let html1 = \"\";\n  props.spanish.map((spanish1, index) => html1.push( /*#__PURE__*/React.createElement(Image, {\n    style: buildColor(props.color),\n    className: props.color,\n    width: \"50\",\n    height: \"50\",\n    alt: spanish1.alt,\n    src: spanish1.ruta,\n    id: spanish1.id + '-' + index + '-sp',\n    name: \"original_sp\",\n    onClick: () => {\n      props.showModalClick();\n      props.setClickLettler(spanish1.id + '-' + index + '-sp');\n      props.setClickLanguage(\"sp\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 22\n    }\n  })));\n  /*let index = 0;\r\n  let html1 = [];let html2 = [];\r\n  let spLenght = (props.spanish[0]).length;\r\n  for (const [index, value] of props.spanish.entries()) {\r\n      let element = value;\r\n      html1.push(<Image style={buildColor(props.color)} className={props.color} width=\"50\" height=\"50\" alt={element.alt} src={element.ruta} id={element.id+'-'+index+'-sp'} name=\"original_sp\" onClick={() => {props.showModalClick(); props.setClickLettler(element.id+'-'+index+'-sp'); props.setClickLanguage(\"sp\")}}/>)\r\n  }*/\n  //CARGA LETRAS DE INGLES\n\n  let html2 = \"\";\n  props.english.map((english1, index) => html2.push( /*#__PURE__*/React.createElement(Image, {\n    style: buildColor(props.color),\n    className: props.color,\n    width: \"50\",\n    height: \"50\",\n    alt: english1.alt,\n    src: english1.ruta,\n    id: english1.id + '-' + index + '-eng',\n    name: \"original_eng\",\n    disabled: english1.nombre === \"space\" ? \"disabled\" : '',\n    onClick: () => {\n      props.showModalClick();\n      props.setClickLettler(english1.id + '-' + index + '-eng');\n      props.setClickLanguage(\"eng\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 24\n    }\n  })));\n  /* for (const [index, value] of props.english.entries()) {\r\n       let element = value;\r\n       html2.push(<Image style={buildColor(props.color)} className={props.color} width=\"50\" height=\"50\" alt={element.alt} src={element.ruta} id={element.id+'-'+index+'-eng'} name=\"original_eng\" disabled={element.nombre === \"space\"?\"disabled\":''} onClick={() => {props.showModalClick(); props.setClickLettler(element.id+'-'+index+'-eng'); props.setClickLanguage(\"eng\")}}/>)\r\n   } */\n  //RETORNA LAS LETRAS ESPAÑOL E INGLES PARA SER MOSTRADAS EN LETRAS.JS\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"lettler_spanish\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, html1), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"lettler_english\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, html2));\n}\n\nexport default LettlerContent;","map":{"version":3,"sources":["C:/Users/ITCO/Documents/Personal/Universidad/TCU/LibrosInteractivos/webapp/src/components/Libro1/Colores-002/LettlerContent.js"],"names":["React","useState","Image","buildColor","color","LettlerContent","props","html1","spanish","map","spanish1","index","push","alt","ruta","id","showModalClick","setClickLettler","setClickLanguage","html2","english","english1","nombre"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,KAAR,QAAoB,iBAApB;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC1B,SAAO;AACHA,IAAAA;AADG,GAAP;AAGH,CAJD,C,CAMA;;;AACA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAC3B;;;;AAKA;AACA,MAAIC,KAAK,GAAG,EAAZ;AACAD,EAAAA,KAAK,CAACE,OAAN,CAAcC,GAAd,CAAkB,CAACC,QAAD,EAAUC,KAAV,KACZJ,KAAK,CAACK,IAAN,eAAW,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAET,UAAU,CAACG,KAAK,CAACF,KAAP,CAAxB;AAAuC,IAAA,SAAS,EAAEE,KAAK,CAACF,KAAxD;AAA+D,IAAA,KAAK,EAAC,IAArE;AAA0E,IAAA,MAAM,EAAC,IAAjF;AAAsF,IAAA,GAAG,EAAEM,QAAQ,CAACG,GAApG;AAAyG,IAAA,GAAG,EAAEH,QAAQ,CAACI,IAAvH;AAA6H,IAAA,EAAE,EAAEJ,QAAQ,CAACK,EAAT,GAAY,GAAZ,GAAgBJ,KAAhB,GAAsB,KAAvJ;AAA8J,IAAA,IAAI,EAAC,aAAnK;AAAiL,IAAA,OAAO,EAAE,MAAM;AAACL,MAAAA,KAAK,CAACU,cAAN;AAAwBV,MAAAA,KAAK,CAACW,eAAN,CAAsBP,QAAQ,CAACK,EAAT,GAAY,GAAZ,GAAgBJ,KAAhB,GAAsB,KAA5C;AAAoDL,MAAAA,KAAK,CAACY,gBAAN,CAAuB,IAAvB;AAA6B,KAA1S;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAX,CADN;AAGI;;;;;;;AAQJ;;AACA,MAAIC,KAAK,GAAG,EAAZ;AACAb,EAAAA,KAAK,CAACc,OAAN,CAAcX,GAAd,CAAkB,CAACY,QAAD,EAAUV,KAAV,KACVQ,KAAK,CAACP,IAAN,eAAW,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAET,UAAU,CAACG,KAAK,CAACF,KAAP,CAAxB;AAAuC,IAAA,SAAS,EAAEE,KAAK,CAACF,KAAxD;AAA+D,IAAA,KAAK,EAAC,IAArE;AAA0E,IAAA,MAAM,EAAC,IAAjF;AAAsF,IAAA,GAAG,EAAEiB,QAAQ,CAACR,GAApG;AAAyG,IAAA,GAAG,EAAEQ,QAAQ,CAACP,IAAvH;AAA6H,IAAA,EAAE,EAAEO,QAAQ,CAACN,EAAT,GAAY,GAAZ,GAAgBJ,KAAhB,GAAsB,MAAvJ;AAA+J,IAAA,IAAI,EAAC,cAApK;AAAmL,IAAA,QAAQ,EAAEU,QAAQ,CAACC,MAAT,KAAoB,OAApB,GAA4B,UAA5B,GAAuC,EAApO;AAAwO,IAAA,OAAO,EAAE,MAAM;AAAChB,MAAAA,KAAK,CAACU,cAAN;AAAwBV,MAAAA,KAAK,CAACW,eAAN,CAAsBI,QAAQ,CAACN,EAAT,GAAY,GAAZ,GAAgBJ,KAAhB,GAAsB,MAA5C;AAAqDL,MAAAA,KAAK,CAACY,gBAAN,CAAuB,KAAvB;AAA8B,KAAnW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAX,CADR;AAGG;;;;AAKH;;AACA,sBACI,uDACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKX,KADL,CADJ,eAII;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKY,KADL,CAJJ,CADJ;AAUH;;AAED,eAAed,cAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport {Image} from 'react-bootstrap'\r\n\r\nconst buildColor = (color) => {\r\n    return {\r\n        color \r\n    }\r\n}\r\n\r\n//FUNCION QUE RENDERIZA LAS IMAGENES DE CADA COLOR TANTO ESPAÑOL E INGLES\r\nfunction LettlerContent(props) {\r\n    /*\r\n    EL PROBLEMA ACA ES QUE CUANDO SE ACTIVA EL NEXTIMAGE DE LETRAS.JS MANTIENE EL ATRIBUTO NAME BASADO EN LAS LETRAS DEL COLOR ANTERIOR, CUANDO SE VAN MARCANDO \r\n    UNA A UNA SE CAMBIA EL NAME DE ORIGNAL_SP O ORIGINAL_ENG POR CHANGE_SP O CHANGE_ENG PERO CUANDO ACTIVO LA FUNCION NO ME LAS CARGA CON EL ORIGINAL\r\n    */\r\n\r\n    //CARGA LETRAS DE ESPAÑOL\r\n    let html1 = \"\";\r\n    props.spanish.map((spanish1,index) =>\r\n          html1.push(<Image style={buildColor(props.color)} className={props.color} width=\"50\" height=\"50\" alt={spanish1.alt} src={spanish1.ruta} id={spanish1.id+'-'+index+'-sp'} name=\"original_sp\" onClick={() => {props.showModalClick(); props.setClickLettler(spanish1.id+'-'+index+'-sp'); props.setClickLanguage(\"sp\")}}/>)\r\n        ); \r\n        /*let index = 0;\r\n        let html1 = [];let html2 = [];\r\n        let spLenght = (props.spanish[0]).length;\r\n        for (const [index, value] of props.spanish.entries()) {\r\n            let element = value;\r\n            html1.push(<Image style={buildColor(props.color)} className={props.color} width=\"50\" height=\"50\" alt={element.alt} src={element.ruta} id={element.id+'-'+index+'-sp'} name=\"original_sp\" onClick={() => {props.showModalClick(); props.setClickLettler(element.id+'-'+index+'-sp'); props.setClickLanguage(\"sp\")}}/>)\r\n        }*/\r\n\r\n    //CARGA LETRAS DE INGLES\r\n    let html2 = \"\";\r\n    props.english.map((english1,index) =>\r\n            html2.push(<Image style={buildColor(props.color)} className={props.color} width=\"50\" height=\"50\" alt={english1.alt} src={english1.ruta} id={english1.id+'-'+index+'-eng'} name=\"original_eng\" disabled={english1.nombre === \"space\"?\"disabled\":''} onClick={() => {props.showModalClick(); props.setClickLettler(english1.id+'-'+index+'-eng'); props.setClickLanguage(\"eng\")}}/>)\r\n        );\r\n       /* for (const [index, value] of props.english.entries()) {\r\n            let element = value;\r\n            html2.push(<Image style={buildColor(props.color)} className={props.color} width=\"50\" height=\"50\" alt={element.alt} src={element.ruta} id={element.id+'-'+index+'-eng'} name=\"original_eng\" disabled={element.nombre === \"space\"?\"disabled\":''} onClick={() => {props.showModalClick(); props.setClickLettler(element.id+'-'+index+'-eng'); props.setClickLanguage(\"eng\")}}/>)\r\n        } */\r\n        \r\n    //RETORNA LAS LETRAS ESPAÑOL E INGLES PARA SER MOSTRADAS EN LETRAS.JS\r\n    return (\r\n        <>\r\n            <div className=\"lettler_spanish\">\r\n                {html1}\r\n            </div>\r\n            <div className=\"lettler_english\">\r\n                {html2}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LettlerContent"]},"metadata":{},"sourceType":"module"}