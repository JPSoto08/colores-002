{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ITCO\\\\Documents\\\\Personal\\\\Universidad\\\\TCU\\\\LibrosInteractivos\\\\webapp\\\\src\\\\components\\\\Libro1\\\\Colores-002\\\\LettlerContent.js\";\nimport React, { useState } from 'react';\nimport { Image } from 'react-bootstrap';\n\nconst buildColor = color => {\n  return {\n    color\n  };\n}; //FUNCION QUE RENDERIZA LAS IMAGENES DE CADA COLOR TANTO ESPAÑOL E INGLES\n\n\nfunction LettlerContent(props) {\n  /*\r\n  EL PROBLEMA ACA ES QUE CUANDO SE ACTIVA EL NEXTIMAGE DE LETRAS.JS MANTIENE EL ATRIBUTO NAME BASADO EN LAS LETRAS DEL COLOR ANTERIOR, CUANDO SE VAN MARCANDO \r\n  UNA A UNA SE CAMBIA EL NAME DE ORIGNAL_SP O ORIGINAL_ENG POR CHANGE_SP O CHANGE_ENG PERO CUANDO ACTIVO LA FUNCION NO ME LAS CARGA CON EL ORIGINAL\r\n  */\n  //CARGA LETRAS DE ESPAÑOL\n\n  /*const html1 = props.spanish.map((spanish1,index) =>\r\n         <Image style={buildColor(props.color)} className={props.color} width=\"50\" height=\"50\" alt={spanish1.alt} src={spanish1.ruta} id={spanish1.id+'-'+index+'-sp'} name=\"original_sp\" onClick={() => {props.showModalClick(); props.setClickLettler(spanish1.id+'-'+index+'-sp'); props.setClickLanguage(\"sp\")}}/>\r\n      ); */\n  let index = 0;\n  let html1 = [];\n  let html2 = [];\n  let spLenght = 5;\n\n  for (const key in props.spanish) {\n    let element = props.spanish[key];\n    html1.push( /*#__PURE__*/React.createElement(Image, {\n      style: buildColor(props.color),\n      className: props.color,\n      width: \"50\",\n      height: \"50\",\n      alt: element.alt,\n      src: element.ruta,\n      id: element.id + '-' + index + '-sp',\n      name: \"original_sp\",\n      onClick: () => {\n        props.showModalClick();\n        props.setClickLettler(element.id + '-' + index + '-sp');\n        props.setClickLanguage(\"sp\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 24\n      }\n    }));\n  } //CARGA LETRAS DE INGLES\n\n  /*const html2 = props.english.map((english1,index) =>\r\n          <Image style={buildColor(props.color)} className={props.color} width=\"50\" height=\"50\" alt={english1.alt} src={english1.ruta} id={english1.id+'-'+index+'-eng'} name=\"original_eng\" disabled={english1.nombre === \"space\"?\"disabled\":''} onClick={() => {props.showModalClick(); props.setClickLettler(english1.id+'-'+index+'-eng'); props.setClickLanguage(\"eng\")}}/>\r\n      );*/\n\n\n  index = 0;\n  let engLenght = 5;\n\n  for (const key in props.english) {\n    fo;\n    let element = props.english[key];\n    html2.push( /*#__PURE__*/React.createElement(Image, {\n      style: buildColor(props.color),\n      className: props.color,\n      width: \"50\",\n      height: \"50\",\n      alt: element.alt,\n      src: element.ruta,\n      id: element.id + '-' + index + '-eng',\n      name: \"original_eng\",\n      disabled: element.nombre === \"space\" ? \"disabled\" : '',\n      onClick: () => {\n        props.showModalClick();\n        props.setClickLettler(element.id + '-' + index + '-eng');\n        props.setClickLanguage(\"eng\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 24\n      }\n    }));\n  } //RETORNA LAS LETRAS ESPAÑOL E INGLES PARA SER MOSTRADAS EN LETRAS.JS\n\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"lettler_spanish\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, html1), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"lettler_english\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, html2));\n}\n\nexport default LettlerContent;","map":{"version":3,"sources":["C:/Users/ITCO/Documents/Personal/Universidad/TCU/LibrosInteractivos/webapp/src/components/Libro1/Colores-002/LettlerContent.js"],"names":["React","useState","Image","buildColor","color","LettlerContent","props","index","html1","html2","spLenght","key","spanish","element","push","alt","ruta","id","showModalClick","setClickLettler","setClickLanguage","engLenght","english","fo","nombre"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport {Image} from 'react-bootstrap'\r\n\r\nconst buildColor = (color) => {\r\n    return {\r\n        color \r\n    }\r\n}\r\n\r\n//FUNCION QUE RENDERIZA LAS IMAGENES DE CADA COLOR TANTO ESPAÑOL E INGLES\r\nfunction LettlerContent(props) {\r\n    /*\r\n    EL PROBLEMA ACA ES QUE CUANDO SE ACTIVA EL NEXTIMAGE DE LETRAS.JS MANTIENE EL ATRIBUTO NAME BASADO EN LAS LETRAS DEL COLOR ANTERIOR, CUANDO SE VAN MARCANDO \r\n    UNA A UNA SE CAMBIA EL NAME DE ORIGNAL_SP O ORIGINAL_ENG POR CHANGE_SP O CHANGE_ENG PERO CUANDO ACTIVO LA FUNCION NO ME LAS CARGA CON EL ORIGINAL\r\n    */\r\n\r\n    //CARGA LETRAS DE ESPAÑOL\r\n    /*const html1 = props.spanish.map((spanish1,index) =>\r\n           <Image style={buildColor(props.color)} className={props.color} width=\"50\" height=\"50\" alt={spanish1.alt} src={spanish1.ruta} id={spanish1.id+'-'+index+'-sp'} name=\"original_sp\" onClick={() => {props.showModalClick(); props.setClickLettler(spanish1.id+'-'+index+'-sp'); props.setClickLanguage(\"sp\")}}/>\r\n        ); */\r\n        let index = 0;\r\n        let html1 = [];let html2 = [];\r\n        let spLenght = 5;\r\n        for (const key in props.spanish) {\r\n            let element = props.spanish[key];\r\n            html1.push(<Image style={buildColor(props.color)} className={props.color} width=\"50\" height=\"50\" alt={element.alt} src={element.ruta} id={element.id+'-'+index+'-sp'} name=\"original_sp\" onClick={() => {props.showModalClick(); props.setClickLettler(element.id+'-'+index+'-sp'); props.setClickLanguage(\"sp\")}}/>)\r\n        }\r\n\r\n    //CARGA LETRAS DE INGLES\r\n    /*const html2 = props.english.map((english1,index) =>\r\n            <Image style={buildColor(props.color)} className={props.color} width=\"50\" height=\"50\" alt={english1.alt} src={english1.ruta} id={english1.id+'-'+index+'-eng'} name=\"original_eng\" disabled={english1.nombre === \"space\"?\"disabled\":''} onClick={() => {props.showModalClick(); props.setClickLettler(english1.id+'-'+index+'-eng'); props.setClickLanguage(\"eng\")}}/>\r\n        );*/\r\n        index = 0;\r\n        let engLenght = 5;\r\n        for (const key in props.english) {\r\n            fo\r\n            let element = props.english[key];\r\n            html2.push(<Image style={buildColor(props.color)} className={props.color} width=\"50\" height=\"50\" alt={element.alt} src={element.ruta} id={element.id+'-'+index+'-eng'} name=\"original_eng\" disabled={element.nombre === \"space\"?\"disabled\":''} onClick={() => {props.showModalClick(); props.setClickLettler(element.id+'-'+index+'-eng'); props.setClickLanguage(\"eng\")}}/>)\r\n        }\r\n        \r\n    //RETORNA LAS LETRAS ESPAÑOL E INGLES PARA SER MOSTRADAS EN LETRAS.JS\r\n    return (\r\n        <>\r\n            <div className=\"lettler_spanish\">\r\n                {html1}\r\n            </div>\r\n            <div className=\"lettler_english\">\r\n                {html2}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LettlerContent"]},"metadata":{},"sourceType":"module"}