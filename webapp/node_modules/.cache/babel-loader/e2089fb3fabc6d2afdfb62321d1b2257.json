{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ITCO\\\\Documents\\\\Personal\\\\Universidad\\\\TCU\\\\LibrosInteractivos\\\\webapp\\\\src\\\\components\\\\Auth\\\\Login.js\";\nimport React, { useState } from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport axios from 'axios';\nimport { Spinner, Alert, Card, Form, Row, Col, Button } from 'react-bootstrap';\nimport './Login.css';\nimport { API_BASE_URL, ACCESS_TOKEN_NAME } from '../../constants/apiContants';\n/* \r\n    Este componente es utilizado para autorizar el ingreso de los usuarios, este envia un request al servidor \r\n    el cual verifica los datos y en caso de ser correctos devuelve un token unico que autoriza al usuario a navegar por el app.\r\n*/\n\nfunction Login(props) {\n  const [showMessageResult, setShowMessage] = useState(false);\n  const [message, setMessage] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [state, setState] = useState({\n    username: \"\",\n    password: \"\"\n  });\n\n  const handleChange = e => {\n    const {\n      id,\n      value\n    } = e.target;\n    setState(prevState => ({ ...prevState,\n      [id]: value\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setShowMessage(false);\n    setMessage('');\n    setLoading(true);\n    const payload = {\n      \"username\": state.username,\n      \"password\": state.password\n    };\n    console.log(API_BASE_URL);\n    axios.post(API_BASE_URL + '/user/login', payload).then(function (response) {\n      if (response.status === 200) {\n        localStorage.setItem(ACCESS_TOKEN_NAME, response.data.token);\n        redirectToHome();\n      } else {\n        setShowMessage(true);\n        setMessage('Invalid username or password');\n      }\n    }).catch(function (error) {\n      console.log(error);\n      setShowMessage(true);\n      setMessage('Invalid username or password');\n    }).finally(() => {\n      setLoading(false);\n    });\n  };\n\n  const redirectToHome = () => {\n    props.history.push('/');\n  };\n\n  return /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"login-form m-auto p-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"username\",\n    className: \"text-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 29\n    }\n  }, \"Username\"), /*#__PURE__*/React.createElement(Form.Control, {\n    required: true,\n    placeholder: \"Username\",\n    value: state.username,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"password\",\n    className: \"text-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 29\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n    required: true,\n    type: \"password\",\n    placeholder: \"Password\",\n    value: state.password,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Form.Row, {\n    className: \"justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    variant: \"outline-primary\",\n    disabled: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 29\n    }\n  }, loading ? /*#__PURE__*/React.createElement(Spinner, {\n    animation: \"border\",\n    role: \"status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 44\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sr-only\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 37\n    }\n  }, \"Loading...\")) : 'Login'))), /*#__PURE__*/React.createElement(Alert, {\n    className: \"login-message mt-5\",\n    variant: \"danger\",\n    dismissible: true,\n    show: showMessageResult,\n    onClick: () => setShowMessage(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Alert.Heading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 25\n    }\n  }, message)))));\n}\n\nexport default withRouter(Login);","map":{"version":3,"sources":["C:/Users/ITCO/Documents/Personal/Universidad/TCU/LibrosInteractivos/webapp/src/components/Auth/Login.js"],"names":["React","useState","withRouter","axios","Spinner","Alert","Card","Form","Row","Col","Button","API_BASE_URL","ACCESS_TOKEN_NAME","Login","props","showMessageResult","setShowMessage","message","setMessage","loading","setLoading","state","setState","username","password","handleChange","e","id","value","target","prevState","handleSubmit","preventDefault","payload","console","log","post","then","response","status","localStorage","setItem","data","token","redirectToHome","catch","error","finally","history","push"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport { Spinner, Alert, Card, Form, Row, Col, Button } from 'react-bootstrap';\r\n\r\nimport './Login.css';\r\nimport { API_BASE_URL, ACCESS_TOKEN_NAME } from '../../constants/apiContants';\r\n\r\n/* \r\n    Este componente es utilizado para autorizar el ingreso de los usuarios, este envia un request al servidor \r\n    el cual verifica los datos y en caso de ser correctos devuelve un token unico que autoriza al usuario a navegar por el app.\r\n*/\r\nfunction Login(props) {\r\n    const [showMessageResult, setShowMessage] = useState(false)\r\n    const [message, setMessage] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const [state, setState] = useState({\r\n        username: \"\",\r\n        password: \"\",\r\n    })\r\n    const handleChange = (e) => {\r\n        const { id, value } = e.target\r\n        setState(prevState => ({\r\n            ...prevState,\r\n            [id]: value\r\n        }))\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        setShowMessage(false)\r\n        setMessage('')\r\n        setLoading(true)\r\n\r\n        const payload = {\r\n            \"username\": state.username,\r\n            \"password\": state.password,\r\n        }\r\n        console.log(API_BASE_URL)\r\n        axios.post(API_BASE_URL + '/user/login', payload)\r\n            .then(function (response) {\r\n                if (response.status === 200) {                    \r\n                    localStorage.setItem(ACCESS_TOKEN_NAME, response.data.token);\r\n                    redirectToHome();\r\n                }\r\n                else {\r\n                    setShowMessage(true)\r\n                    setMessage('Invalid username or password')\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n                setShowMessage(true)\r\n                setMessage('Invalid username or password')\r\n            })\r\n            .finally(() => {\r\n                setLoading(false)\r\n            })\r\n    }\r\n    const redirectToHome = () => {\r\n        props.history.push('/');\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col>\r\n                <Card className=\"login-form m-auto p-5\">\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group controlId=\"username\" className=\"text-left\">\r\n                            <Form.Label>Username</Form.Label>\r\n                            <Form.Control\r\n                                required\r\n                                placeholder=\"Username\"\r\n                                value={state.username}\r\n                                onChange={handleChange}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"password\" className=\"text-left\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control\r\n                                required\r\n                                type=\"password\"\r\n                                placeholder=\"Password\"\r\n                                value={state.password}\r\n                                onChange={handleChange}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Row className=\"justify-content-center\">\r\n                            <Button type=\"submit\" variant=\"outline-primary\" disabled={loading}>\r\n                                {loading ? <Spinner animation=\"border\" role=\"status\">\r\n                                    <span className=\"sr-only\">Loading...</span>\r\n                                </Spinner> :\r\n                                    'Login'}\r\n                            </Button>\r\n                        </Form.Row>\r\n                    </Form>\r\n                    <Alert className=\"login-message mt-5\" variant=\"danger\" dismissible show={showMessageResult} onClick={() => setShowMessage(false)}>\r\n                        <Alert.Heading>{message}</Alert.Heading>\r\n                    </Alert>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default withRouter(Login);"]},"metadata":{},"sourceType":"module"}