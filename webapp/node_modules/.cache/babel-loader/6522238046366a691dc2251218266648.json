{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ITCO\\\\Documents\\\\Personal\\\\Universidad\\\\TCU\\\\LibrosInteractivos\\\\webapp\\\\src\\\\components\\\\Forms\\\\FormGroup.js\";\nimport React, { useState } from 'react';\nimport { Col, Row, Card } from 'react-bootstrap';\nimport FormInput from './FormInput';\n\nfunction FormGroup({\n  title,\n  formGroupKey,\n  updateEvent,\n  data,\n  columns = 1\n}) {\n  const [inputGroup, updateFormInputState] = useState(data);\n\n  function updateFormInput(formInput) {\n    const newState = Object.assign({}, inputGroup, formInput);\n    updateFormInputState(newState);\n    updateEvent({\n      'groupKey': formGroupKey,\n      inputData: newState\n    });\n  }\n\n  function buildColumnsPerRow(items, cols) {\n    return items.reduce((acc, val, i) => {\n      const idx = Math.floor(i / cols);\n      const col = acc[idx] || (acc[idx] = []);\n      col.push(val);\n      return acc;\n    }, []);\n  }\n\n  function renderFormInput(formInput) {\n    return /*#__PURE__*/React.createElement(Col, {\n      key: `col${formInput.updateKey}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 20\n      }\n    }, /*#__PURE__*/React.createElement(FormInput, {\n      key: formInput.updateKey,\n      label: formInput.label,\n      updateKey: formInput.updateKey,\n      updateEvent: updateFormInput,\n      data: formInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 60\n      }\n    }));\n  }\n\n  function renderFormInputs(inputs) {\n    const rows = buildColumnsPerRow(inputs, columns);\n    return rows.map((formInputs, i) => {\n      return /*#__PURE__*/React.createElement(Row, {\n        key: `row${formGroupKey}${i}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 20\n        }\n      }, formInputs.map(renderFormInput));\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Card, {\n    className: \"form-card p-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, title), renderFormInputs(Object.keys(data).map(key => data[key])));\n}\n\nexport default FormGroup;","map":{"version":3,"sources":["C:/Users/ITCO/Documents/Personal/Universidad/TCU/LibrosInteractivos/webapp/src/components/Forms/FormGroup.js"],"names":["React","useState","Col","Row","Card","FormInput","FormGroup","title","formGroupKey","updateEvent","data","columns","inputGroup","updateFormInputState","updateFormInput","formInput","newState","Object","assign","inputData","buildColumnsPerRow","items","cols","reduce","acc","val","i","idx","Math","floor","col","push","renderFormInput","updateKey","label","renderFormInputs","inputs","rows","map","formInputs","keys","key"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,QAA+B,iBAA/B;AAEA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,SAASC,SAAT,CAAmB;AAAEC,EAAAA,KAAF;AAASC,EAAAA,YAAT;AAAuBC,EAAAA,WAAvB;AAAoCC,EAAAA,IAApC;AAA0CC,EAAAA,OAAO,GAAG;AAApD,CAAnB,EAA4E;AACxE,QAAM,CAACC,UAAD,EAAaC,oBAAb,IAAqCZ,QAAQ,CAACS,IAAD,CAAnD;;AACA,WAASI,eAAT,CAAyBC,SAAzB,EAAoC;AAChC,UAAMC,QAAQ,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,UAAlB,EAA8BG,SAA9B,CAAjB;AACAF,IAAAA,oBAAoB,CAACG,QAAD,CAApB;AACAP,IAAAA,WAAW,CAAC;AAAC,kBAAYD,YAAb;AAA2BW,MAAAA,SAAS,EAAEH;AAAtC,KAAD,CAAX;AACH;;AAED,WAASI,kBAAT,CAA6BC,KAA7B,EAAoCC,IAApC,EAA0C;AACtC,WAAOD,KAAK,CAACE,MAAN,CAAa,CAACC,GAAD,EAAMC,GAAN,EAAWC,CAAX,KAAiB;AACnC,YAAMC,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWH,CAAC,GAAGJ,IAAf,CAAZ;AACA,YAAMQ,GAAG,GAAGN,GAAG,CAACG,GAAD,CAAH,KAAaH,GAAG,CAACG,GAAD,CAAH,GAAW,EAAxB,CAAZ;AACAG,MAAAA,GAAG,CAACC,IAAJ,CAASN,GAAT;AAEA,aAAOD,GAAP;AACD,KANM,EAMJ,EANI,CAAP;AAOD;;AAED,WAASQ,eAAT,CAAyBjB,SAAzB,EAAoC;AAC9B,wBAAO,oBAAC,GAAD;AAAK,MAAA,GAAG,EAAG,MAAKA,SAAS,CAACkB,SAAU,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAwC,oBAAC,SAAD;AAAW,MAAA,GAAG,EAAElB,SAAS,CAACkB,SAA1B;AAAqC,MAAA,KAAK,EAAElB,SAAS,CAACmB,KAAtD;AAA6D,MAAA,SAAS,EAAEnB,SAAS,CAACkB,SAAlF;AAA6F,MAAA,WAAW,EAAEnB,eAA1G;AAA4H,MAAA,IAAI,EAAEC,SAAlI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAxC,CAAP;AACL;;AAEH,WAASoB,gBAAT,CAA0BC,MAA1B,EAAkC;AAC9B,UAAMC,IAAI,GAAGjB,kBAAkB,CAACgB,MAAD,EAASzB,OAAT,CAA/B;AAEA,WAAO0B,IAAI,CAACC,GAAL,CAAS,CAACC,UAAD,EAAab,CAAb,KAAmB;AAC/B,0BAAO,oBAAC,GAAD;AAAK,QAAA,GAAG,EAAG,MAAKlB,YAAa,GAAEkB,CAAE,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACFa,UAAU,CAACD,GAAX,CAAeN,eAAf,CADE,CAAP;AAGH,KAJM,CAAP;AAKH;;AAED,sBACI,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAazB,KAAb,CADJ,EAEK4B,gBAAgB,CAAClB,MAAM,CAACuB,IAAP,CAAY9B,IAAZ,EAAkB4B,GAAlB,CAAsBG,GAAG,IAAI/B,IAAI,CAAC+B,GAAD,CAAjC,CAAD,CAFrB,CADJ;AAMH;;AAED,eAAenC,SAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { Col, Row, Card } from 'react-bootstrap';\r\n\r\nimport FormInput from './FormInput';\r\n\r\nfunction FormGroup({ title, formGroupKey, updateEvent, data, columns = 1 }) {\r\n    const [inputGroup, updateFormInputState] = useState(data)    \r\n    function updateFormInput(formInput) {              \r\n        const newState = Object.assign({}, inputGroup, formInput)          \r\n        updateFormInputState(newState)                  \r\n        updateEvent({'groupKey': formGroupKey, inputData: newState})\r\n    }  \r\n\r\n    function buildColumnsPerRow (items, cols) {\r\n        return items.reduce((acc, val, i) => {\r\n          const idx = Math.floor(i / cols)\r\n          const col = acc[idx] || (acc[idx] = [])\r\n          col.push(val)\r\n      \r\n          return acc\r\n        }, [])\r\n      }\r\n\r\n      function renderFormInput(formInput) {\r\n            return <Col key={`col${formInput.updateKey}`} ><FormInput key={formInput.updateKey} label={formInput.label} updateKey={formInput.updateKey} updateEvent={updateFormInput}  data={formInput}/></Col>\r\n      }\r\n\r\n    function renderFormInputs(inputs) {        \r\n        const rows = buildColumnsPerRow(inputs, columns)          \r\n        \r\n        return rows.map((formInputs, i) => {\r\n            return <Row key={`row${formGroupKey}${i}`}>\r\n                {formInputs.map(renderFormInput)}\r\n            </Row>\r\n        })      \r\n    }\r\n\r\n    return (\r\n        <Card className=\"form-card p-2\">\r\n            <Card.Title>{title}</Card.Title>            \r\n            {renderFormInputs(Object.keys(data).map(key => data[key]))}          \r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default FormGroup;"]},"metadata":{},"sourceType":"module"}